import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder
from scipy import stats
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
import seaborn as sns
import matplotlib.pyplot as plt




# === 3. –†–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å Lasso –¥–ª—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ–º–æ—Å—Ç–∏
from sklearn.linear_model import Lasso
from sklearn.model_selection import train_test_split
from sklearn.pipeline import make_pipeline

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞—Ç–∞—Ñ—Ä–µ–π–º —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
df = pd.read_csv('train_clustered_categories.csv')
X = df[['avg_temp_c', 'precipitation_mm', 'city_code', 'category']]
y = df['log_units']

# Train/test split
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)

# Lasso-—Ä–µ–≥—Ä–µ—Å—Å–∏—è —Å –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ–º
from sklearn.linear_model import LassoCV

model = make_pipeline(StandardScaler(), LassoCV(cv=5, random_state=42))

model.fit(X_train, y_train)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –≤—ã–≤–æ–¥ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤
Lasso = model.named_steps['lassocv']
coefs = pd.Series(Lasso.coef_, index=X.columns)

print("\nüìå –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –≤–ª–∏—è–Ω–∏—è –ø–æ–≥–æ–¥–Ω—ã—Ö –∏ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤:")
print(coefs)

# === –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤
plt.figure(figsize=(8, 5))
sns.barplot(x=coefs.values, y=coefs.index)
plt.axvline(0, color='gray', linestyle='--')
plt.title("–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –≤–ª–∏—è–Ω–∏—è –ø–æ–≥–æ–¥—ã –∏ –≥–µ–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–∞ –ª–æ–≥–∞—Ä–∏—Ñ–º –ø—Ä–æ–¥–∞–∂")
plt.xlabel("–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç (–ª–æ–≥-–ø—Ä–æ–¥–∞–∂–∏)")
plt.ylabel("–ü—Ä–∏–∑–Ω–∞–∫")
plt.grid(True)
plt.tight_layout()
plt.show()

# === 4. –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–≥–æ–¥–Ω—ã—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤
df['adjusted_log_units'] = (
    df['log_units']
    + coefs['avg_temp_c'] * df['avg_temp_c']
    + coefs['precipitation_mm'] * df['precipitation_mm']
)
df['adjusted_units'] = df['adjusted_log_units'].apply(lambda x: max(0, round(np.expm1(x))))

# === 5. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
coefs.to_csv('Lasso_weather_coefficients.csv')
df.to_csv('train_with_adjusted_forecast.csv', index=False)
print("\n‚úÖ –î–∞–Ω–Ω—ã–µ —Å —É—á—ë—Ç–æ–º –ø–æ–≥–æ–¥–Ω–æ–π –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ train_with_adjusted_forecast.csv")

"""–ú—É–ª—å—Ç–∏–∫–æ–ª–ª–∏–Ω–µ–∞—Ä–Ω–æ—Å—Ç—å –º–µ–∂–¥—É —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π –∏ –æ—Å–∞–¥–∫–∞–º–∏ –µ—Å—Ç—å, –Ω–æ –º—ã –µ—ë –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ —Ä–µ–≥—É–ª—è—Ä–∏–∑–∞—Ü–∏—é (Lasso) ‚Äî —ç—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ–º–æ—Å—Ç—å –º–æ–¥–µ–ª–∏.
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∏ –æ—Å–∞–¥–∫–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–ª–∏—è—é—Ç –Ω–∞ —Å–ø—Ä–æ—Å, –Ω–æ —Å–ª–∞–±–æ ‚Äî –≤–∞–∂–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å –∏—Ö –≤ —Å–æ—á–µ—Ç–∞–Ω–∏–∏ —Å –¥—Ä—É–≥–∏–º–∏ –ø—Ä–∏–∑–Ω–∞–∫–∞–º–∏.

–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞ ‚Äî –∫–ª—é—á–µ–≤–æ–π —Ñ–∞–∫—Ç–æ—Ä: —Ç–æ–≤–∞—Ä—ã —Å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –ø–∞—Ç—Ç–µ—Ä–Ω–æ–º –ø—Ä–æ–¥–∞–∂ –ø—Ä–æ–¥–∞—é—Ç—Å—è —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ —Ö—É–∂–µ/–ª—É—á—à–µ.
–ü–æ–≥–æ–¥–Ω—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∏ –æ—Å–∞–¥–∫–∏, –∏–º–µ—é—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ, –Ω–æ —Å–ª–∞–±–æ–µ –≤–ª–∏—è–Ω–∏–µ.

–ö–æ–¥ –≥–æ—Ä–æ–¥–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —á—Ç–æ –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –æ —Å–ª–∞–±–æ–π –µ–≥–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ–º–æ—Å—Ç–∏ –≤ —Ç–µ–∫—É—â–µ–º –≤–∏–¥–µ.


"""