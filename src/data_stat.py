import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder
from scipy import stats
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
import seaborn as sns
import matplotlib.pyplot as plt





# –ó–∞–≥—Ä—É–∑–∫–∞ –æ—á–∏—â–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
df = pd.read_csv('train_with_adjusted_forecast.csv')
df['units'] = df['adjusted_units']

# –í—ã–±–æ—Ä —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
numeric_df = df.select_dtypes(include=['float64', 'int64'])

# –£–¥–∞–ª–∏–º ID –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∞–ª—å–Ω—ã–µ –∫–æ–¥—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
exclude_cols = ['store_nbr', 'item_nbr', 'unique_id_code']
numeric_df = numeric_df.drop(columns=[col for col in exclude_cols if col in numeric_df.columns], errors='ignore')

# –†–∞—Å—á–µ—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã
corr_matrix = numeric_df.corr()

# –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ —Ç–µ–ø–ª–æ–≤–æ–π –∫–∞—Ä—Ç—ã
plt.figure(figsize=(10, 8))
sns.heatmap(corr_matrix, annot=True, fmt=".2f", cmap="coolwarm", linewidths=0.5)
plt.title("–ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è —Ç–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")
plt.xticks(rotation=45)
plt.yticks(rotation=0)
plt.tight_layout()
plt.show()

"""–ü–æ–≥–æ–¥–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ (avg_temp_c, precipitation_mm) –Ω–µ –∫–æ—Ä—Ä–µ–ª–∏—Ä—É—é—Ç —Å–∏–ª—å–Ω–æ –º–µ–∂–¥—É —Å–æ–±–æ–π.

log_units —Å–∏–ª—å–Ω–æ –∫–æ—Ä—Ä–µ–ª–∏—Ä—É–µ—Ç —Å units.

–î—Ä—É–≥–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ (category, city_code) —Å–ª–∞–±–æ –∫–æ—Ä—Ä–µ–ª–∏—Ä—É—é—Ç —Å –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏.

"""

# –ó–∞–≥—Ä—É–∑–∫–∞ –æ—á–∏—â–µ–Ω–Ω–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞ (–∏–ª–∏ –ø–æ–¥—Å—Ç–∞–≤—å —Å–≤–æ–π —Ñ–∞–π–ª)
df = pd.read_csv('train_with_adjusted_forecast.csv')
df['units'] = df['adjusted_units']

# –í—ã–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏
numeric_df = df.select_dtypes(include=['float64', 'int64'])

# –£–¥–∞–ª–∏–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
exclude_cols = ['store_nbr', 'item_nbr', 'unique_id_code']
numeric_df = numeric_df.drop(columns=[col for col in exclude_cols if col in numeric_df.columns], errors='ignore')

# –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã
correlation_matrix = numeric_df.corr()

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü—ã
print("üìä –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞:")
print(correlation_matrix.round(2))

df = pd.read_csv('train_with_adjusted_forecast.csv')
df['units'] = df['adjusted_units']

# –ê–≥—Ä–µ–≥–∏—Ä—É–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–∂ –ø–æ –∫–∞–∂–¥–æ–º—É —Ç–æ–≤–∞—Ä—É
item_sales = df.groupby('item_nbr')['units'].sum().sort_values(ascending=False)

# –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
plt.figure(figsize=(12, 6))
sns.histplot(item_sales, bins=50, kde=True)
plt.title("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–¥–∞–∂ –ø–æ item_nbr")
plt.xlabel("–°—É–º–º–∞—Ä–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–∞")
plt.ylabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤")
plt.grid(True)
plt.tight_layout()
plt.show()

""" 1. –ü–∏–∫ –æ–∫–æ–ª–æ –Ω—É–ª—è
–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ (–ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤—Å–µ) –∏–º–µ—é—Ç –Ω–∏–∑–∫–∏–µ —Å—É–º–º–∞—Ä–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏

–≠—Ç–æ –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å:

—Ç–æ–≤–∞—Ä—ã —Å –Ω–∏–∑–∫–∏–º —Å–ø—Ä–æ—Å–æ–º

—Ç–æ–≤–∞—Ä—ã, –ø–æ—è–≤–ª—è—é—â–∏–µ—Å—è/–ø—Ä–æ–¥–∞—é—â–∏–µ—Å—è —Ç–æ–ª—å–∫–æ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö –∏–ª–∏ –ø–µ—Ä–∏–æ–¥–∞—Ö

2. –ù–µ–º–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ —Å –û–ß–ï–ù–¨ –≤—ã—Å–æ–∫–∏–º–∏ –ø—Ä–æ–¥–∞–∂–∞–º–∏
–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –µ–¥–∏–Ω–∏—Ü—ã –∏–º–µ—é—Ç –ø—Ä–æ–¥–∞–∂–∏ —Å–≤—ã—à–µ 100,000 ‚Äî 400,000+

–≠—Ç–æ "—Ö–∏—Ç—ã –ø—Ä–æ–¥–∞–∂", –∫–æ—Ç–æ—Ä—ã–µ:

–ø–æ–ø—É–ª—è—Ä–Ω—ã –≤–æ –º–Ω–æ–≥–∏—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö

–ø—Ä–æ–¥–∞—é—Ç—Å—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ

–º–æ–≥—É—Ç –±—ã—Ç—å —Å–µ–∑–æ–Ω–Ω—ã–º–∏, –Ω–æ —Å –º–∞—Å—Å–æ–≤—ã–º —Å–ø—Ä–æ—Å–æ–º


"""

df = pd.read_csv('train_with_adjusted_forecast.csv')
df['units'] = df['adjusted_units']

# –ê–≥—Ä–µ–≥–∏—Ä—É–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–∂ –ø–æ –∫–∞–∂–¥–æ–º—É –º–∞–≥–∞–∑–∏–Ω—É
store_sales = df.groupby('store_nbr')['units'].sum().sort_values(ascending=False)

# –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
plt.figure(figsize=(12, 6))
sns.barplot(x=store_sales.index.astype(str), y=store_sales.values)
plt.title("–°—É–º–º–∞—Ä–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏ –ø–æ –∫–∞–∂–¥–æ–º—É –º–∞–≥–∞–∑–∏–Ω—É (store_nbr)")
plt.xlabel("store_nbr")
plt.ylabel("–û–±—â–∏–µ –ø—Ä–æ–¥–∞–∂–∏")
plt.xticks(rotation=45)
plt.grid(True)
plt.tight_layout()
plt.show()

pivot = pd.pivot_table(
    df,
    values='units',
    index='store_nbr',
    columns='item_nbr',
    aggfunc='sum',
    fill_value=0
)

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–∞—Å—Ç–∏ —Ç–∞–±–ª–∏—Ü—ã
print(pivot.head())

import holidays

# === 1. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
df = pd.read_csv('train_with_adjusted_forecast.csv')
df['units'] = df['adjusted_units']

# === 2. –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ 'date' –∫ datetime ===
df['date'] = pd.to_datetime(df['date'])

# === 3. –ì–æ–¥, –º–µ—Å—è—Ü, –¥–µ–Ω—å ===
df['year'] = df['date'].dt.year
df['month'] = df['date'].dt.month
df['day'] = df['date'].dt.day

# === 4. –°–µ–∑–æ–Ω –ø–æ –º–µ—Å—è—Ü—É ===
df['season'] = 'unknown'
df.loc[df['month'].isin([12, 1, 2]), 'season'] = 'winter'
df.loc[df['month'].isin([3, 4, 5]), 'season'] = 'spring'
df.loc[df['month'].isin([6, 7, 8]), 'season'] = 'summer'
df.loc[df['month'].isin([9, 10, 11]), 'season'] = 'fall'

# === 5. –í—ã—Ö–æ–¥–Ω—ã–µ (—Å—É–±–±–æ—Ç–∞ –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ) ===
df['weekend'] = df['date'].dt.dayofweek.isin([5, 6]).astype(int)

# === 6. –ü—Ä–∞–∑–¥–Ω–∏–∫–∏ –°–®–ê ===
us_holidays = holidays.US()
df['holidays'] = df['date'].apply(lambda x: 1 if x in us_holidays else 0)

# === 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ ===
print(df[['date', 'year', 'month', 'day', 'season', 'weekend', 'holidays']].head())

# === 8. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ===
df.to_csv('train_with_temporal_features.csv', index=False)

df = pd.read_csv('train_with_temporal_features.csv')
# === –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–µ–∑–æ–Ω–∞ –ø–æ –º–µ—Å—è—Ü—É ===
df['season'] = 'unknown'  # –æ—á–∏—â–∞–µ–º –ø–µ—Ä–µ–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ–º
df.loc[df['month'].isin([6, 7, 8]), 'season'] = 'summer'
df.loc[df['month'].isin([9, 10, 11]), 'season'] = 'fall'
df.loc[df['month'].isin([12, 1, 2]), 'season'] = 'winter'
df.loc[df['month'].isin([3, 4, 5]), 'season'] = 'spring'

# === –ü—Ä–∏–∑–Ω–∞–∫ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ –°–®–ê ===
us_holidays = holidays.US()
df['holidays'] = df['date'].apply(lambda x: 1 if x in us_holidays else 0)

# === –ü–æ–¥—Å—á—ë—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã—Ö –∏ –æ–±—ã—á–Ω—ã—Ö –¥–Ω–µ–π ===
print("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞–º:")
print(df['holidays'].value_counts())

# === –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç ===
df.to_csv('train_final_temporal.csv', index=False)

df = pd.read_csv('train_final_temporal.csv')

# === –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≥–æ–¥–∞, –º–µ—Å—è—Ü–∞ –∏ –¥–Ω—è ===
df['date'] = pd.to_datetime(df['date'])
df['year'] = df['date'].dt.year
df['month'] = df['date'].dt.month
df['day'] = df['date'].dt.day

# === –ü—Ä–∏–∑–Ω–∞–∫ –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –¥–Ω—è: 1 ‚Äî –≤—ã—Ö–æ–¥–Ω–æ–π (–°–±/–í—Å), 0 ‚Äî –±—É–¥–Ω–∏ ===
df['weekend'] = df['date'].dt.dayofweek.apply(lambda x: 1 if x >= 5 else 0)

# === –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Å–µ–∑–æ–Ω–∞ –ø–æ –º–µ—Å—è—Ü—É ===
df['season'] = 'unknown'
df.loc[df['month'].isin([12, 1, 2]), 'season'] = 'winter'
df.loc[df['month'].isin([3, 4, 5]), 'season'] = 'spring'
df.loc[df['month'].isin([6, 7, 8]), 'season'] = 'summer'
df.loc[df['month'].isin([9, 10, 11]), 'season'] = 'fall'
# === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–∞ ===
df.to_csv('train_enriched_temporal.csv', index=False)

df = pd.read_csv('train_enriched_temporal.csv')

# === One-hot –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∞ 'season' ===
df_season = pd.get_dummies(df['season'], prefix='is')

# === –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–æ–º ===
df = df.join(df_season)

# === –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–∑–Ω–∞–∫–∞ 'season' ===
df.drop(columns=['season'], inplace=True)

# === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ===
df.to_csv('train_with_onehot_season.csv', index=False)

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ===
print("–†–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è:", df.shape)
print(df.head())

df = pd.read_csv('train_with_onehot_season.csv')

# ===–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∞ "sale": 1 –µ—Å–ª–∏ –±—ã–ª–∞ –ø—Ä–æ–¥–∞–∂–∞, –∏–Ω–∞—á–µ 0 ===
df['sale'] = np.where(df['units'] > 0, 1, 0)

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂ ===
print("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂ (0 = –Ω–µ—Ç, 1 = –±—ã–ª–∞):")
print(df['sale'].value_counts())

# ===  –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ===
df.to_csv('train_final_with_sale.csv', index=False)